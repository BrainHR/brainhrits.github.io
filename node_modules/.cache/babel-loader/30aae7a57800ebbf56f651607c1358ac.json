{"ast":null,"code":"import React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.interval = 50;\n    this.state = {\n      count: 0,\n      maxCount: this.props.maxCount ? this.props.maxCount : 0,\n      duration: this.props.duration ? this.props.duration * 1000 : 5 * 1000\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), this.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    if (this.state.count < this.state.maxCount) {\n      this.setState(prevState => {\n        var tempCount = prevState.count + prevState.maxCount / (prevState.duration / this.interval);\n        return {\n          count: tempCount\n        };\n      });\n    } else {\n      clearInterval(this.timerID);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.count\n    }, void 0, false);\n  }\n}","map":{"version":3,"names":["React","Counter","Component","constructor","props","interval","state","count","maxCount","duration","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","prevState","tempCount","render"],"sources":["/Users/mohan/Documents/brian/new-website/src/components/pages/home/statistics/Counter.js"],"sourcesContent":["import React from \"react\";\n\nexport default class Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.interval = 50;\n    this.state = {\n      count: 0,\n      maxCount: this.props.maxCount ? this.props.maxCount : 0,\n      duration: this.props.duration ? this.props.duration * 1000 : 5 * 1000,\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), this.interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    if (this.state.count < this.state.maxCount) {\n      this.setState((prevState) => {\n        var tempCount =\n          prevState.count +\n          prevState.maxCount / (prevState.duration / this.interval);\n\n        return {\n          count: tempCount,\n        };\n      });\n    } else {\n      clearInterval(this.timerID);\n    }\n  }\n  render() {\n    return <>{this.state.count}</>;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,eAAe,MAAMC,OAAO,SAASD,KAAK,CAACE,SAAS,CAAC;EACnDC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,IAAI,CAACJ,KAAK,CAACI,QAAQ,GAAG,IAAI,CAACJ,KAAK,CAACI,QAAQ,GAAG,CAAC;MACvDC,QAAQ,EAAE,IAAI,CAACL,KAAK,CAACK,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACK,QAAQ,GAAG,IAAI,GAAG,CAAC,GAAG;IACnE,CAAC;EACH;EAEAC,iBAAiB,GAAG;IAClB,IAAI,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM,IAAI,CAACC,IAAI,EAAE,EAAE,IAAI,CAACR,QAAQ,CAAC;EAC9D;EAEAS,oBAAoB,GAAG;IACrBC,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC;EAC7B;EAEAE,IAAI,GAAG;IACL,IAAI,IAAI,CAACP,KAAK,CAACC,KAAK,GAAG,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE;MAC1C,IAAI,CAACQ,QAAQ,CAAEC,SAAS,IAAK;QAC3B,IAAIC,SAAS,GACXD,SAAS,CAACV,KAAK,GACfU,SAAS,CAACT,QAAQ,IAAIS,SAAS,CAACR,QAAQ,GAAG,IAAI,CAACJ,QAAQ,CAAC;QAE3D,OAAO;UACLE,KAAK,EAAEW;QACT,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,MAAM;MACLH,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC;IAC7B;EACF;EACAQ,MAAM,GAAG;IACP,oBAAO;MAAA,UAAG,IAAI,CAACb,KAAK,CAACC;IAAK,iBAAI;EAChC;AACF"},"metadata":{},"sourceType":"module"}